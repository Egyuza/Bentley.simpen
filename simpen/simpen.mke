#--------------------------------------------------------------------------------------
#
#    $RCSfile: simpen.mke,v $
#   $Revision: 1.4.34.1 $
#       $Date: 2013/10/22 02:03:31 $
#
#  $Copyright: (c) 2013 Bentley Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------
#---------------------------------------------
# Define macros specific to this example
#---------------------------------------------
appName   = simpen
sAppName  = simpen

baseDir    = $(_MakeFilePath)
privateInc = $(baseDir)
langSpec   = $(baseDir)english/

#------------------------------------------------------------------------
# mdl.mki contains the default rules for creating .rsc, .mo, etc files
#------------------------------------------------------------------------
%include mdl.mki
%include tfmdl.mki

compOpts + -b

dirToSearch = $(MSMDE)mdl/MicroStationAPI/
%include cincapnd.mki

dirToSearch = $(tfmdlInc)
%include cincapnd.mki

dirToSearch = $(genSrc)
%include cincapnd.mki

#----------------------------------------------------------------------
# Create needed output directories if they don't exist
#----------------------------------------------------------------------
$(o)$(tstdir)            : $(o)$(tstdir)

$(rscObjects)$(tstdir)        : $(rscObjects)$(tstdir)

$(reqdObjs)$(tstdir)        : $(reqdObjs)$(tstdir)

#------------------------------------------------------------------------
# Define macros for files included in our link and resource merge
#------------------------------------------------------------------------
dlmObjs = \
    $(o)XmlAttributeHelper$(oext)  \
    $(o)OpeningRect$(oext)  \
    $(o)CExpression$(oext)  \
    $(o)OpeningTask$(oext)  \
    $(o)OpeningByTaskTool$(oext)  \
    $(o)OpeningByContourTool$(oext)  \
    $(o)OpeningHelper$(oext)  \
    $(o)Opening$(oext)  \
    $(o)ElementHelper$(oext)  \
    $(o)pipepen$(oext)  \
    $(o)RectPen$(oext)  \
    $(o)RectPenLocate$(oext)  \
    $(o)RectPenDraw$(oext)  \
    $(o)RectPenPlace$(oext)  \
    $(o)$(appName)$(oext)  \
    $(mdlLibs)BentleyDgn.lib \
    $(mdlLibs)toolsubs.lib \
    $(mdlLibs)mdllib.lib \
    $(mdlLibs)ditemlib.lib \
    $(mdlLibs)mdlbltin.lib \
    $(mdlLibs)kisolid.lib \
    $(mdlLibs)mdlxml.lib \
    $(mdlLibs)mdlxmltools.lib \
    $(mdlLibs)bentley.xmlinstancenative.lib \
    $(tfmdlLibs)tfapi.lib \
    $(tfmdlLibs)CatalogInstanceCollection.lib \
    $(tfmdlLibs)CatalogCollectionHelpers$(libExt)

bclassRscs = \
   $(o)$(appName)cmd.rsc \
   $(o)$(appName)typ.rsc \

#------------------------------------------------------------------------
# Generate command table include & resource file using rcomp
#------------------------------------------------------------------------
# $(genSrc)$(appName)cmd.h    : $(baseDir)$(appName)cmd.r
$(baseDir)$(appName)cmd.h       : $(baseDir)$(appName)cmd.r

$(o)$(appName)cmd.rsc        : $(baseDir)$(appName)cmd.r

#------------------------------------------------------------------------
# Create & compile the app's type resource using rsctype & rcomp
#------------------------------------------------------------------------
$(o)$(sAppName)typ.r        : $(baseDir)$(sAppName)typ.mt     \
                      $(baseDir)$(appName).h

$(o)$(sAppName)typ.rsc        : $(o)$(sAppName)typ.r

#------------------------------------------------------------------------
# Compile the cpp source 
#------------------------------------------------------------------------
$(o)$(appName)$(oext) : $(baseDir)$(appName).cpp   $(baseDir)$(appName).h

$(o)XmlAttributeHelper$(oext) : $(baseDir)XmlAttributeHelper.cpp   $(baseDir)XmlAttributeHelper.h

$(o)OpeningRect$(oext) : $(baseDir)OpeningRect.cpp   $(baseDir)OpeningRect.h

$(o)CExpression$(oext) : $(baseDir)CExpression.cpp   $(baseDir)CExpression.h

$(o)OpeningTask$(oext) : $(baseDir)OpeningTask.cpp   $(baseDir)OpeningTask.h

$(o)Opening$(oext) : $(baseDir)Opening.cpp   $(baseDir)Opening.h

$(o)OpeningHelper$(oext) : $(baseDir)OpeningHelper.cpp   $(baseDir)OpeningHelper.h

$(o)pipepen$(oext) : $(baseDir)pipepen.cpp   $(baseDir)pipepen.h
                 
$(o)ElementHelper$(oext) : $(baseDir)ElementHelper.cpp   $(baseDir)ElementHelper.h

$(o)RectPen$(oext) : $(baseDir)RectPen.cpp   $(baseDir)RectPen.h

$(o)RectPenLocate$(oext) : $(baseDir)RectPenLocate.cpp   $(baseDir)RectPenLocate.h

$(o)RectPenDraw$(oext) : $(baseDir)RectPenDraw.cpp   $(baseDir)RectPenDraw.h

$(o)RectPenPlace$(oext) : $(baseDir)RectPenPlace.cpp   $(baseDir)RectPenPlace.h

$(o)OpeningByContourTool$(oext) : $(baseDir)OpeningByContourTool.cpp   $(baseDir)OpeningByContourTool.h

$(o)OpeningByTaskTool$(oext) : $(baseDir)OpeningByTaskTool.cpp   $(baseDir)OpeningByTaskTool.h

                  
#----------------------------------------------------------------------
#    The following section generates the MDL Intermediate module using 
#    rlib. This module contains the MDL CODE module and any 
#    non-translatable resource modules.
#----------------------------------------------------------------------
$(o)$(appName).mi          : $(bclassRscs)
        $(msg)
        > $(o)temp.cmd
        -o$@
        $(bclassRscs)
        <
        $(RLibCmd) @$(o)temp.cmd
        ~time

#----------------------------------------------------------------------
#    The last step to this makefile is to include the MANDATORY makefile
#    used to compile the translatable resources and create the final
#    MDL application. This file is typically located in the directory
#    pointed to by the 'baseDir' macro defined by the user at the top
#    of this file. The standard extension for this included makefile is
#    '.mki' and the file is distributed as part of the Foreign Language
#    Translation Kit.
#----------------------------------------------------------------------
#----------------------------------------------------------------------
#   Set up to use dlmcomp.mki and dlmlink.mki
#----------------------------------------------------------------------
DLM_OBJECT_DEST        = $(o)
DLM_LIBDEF_SRC      = $(genSrc)
DLM_NAME         = $(appName)
DLM_ENTRY_NAME         = dllentry
DLM_RESL_NAME         = fileresl
DLM_OBJECT_FILES      = $(dlmObjs)
DLM_NO_DLS        = 1    #  Used DLLEXPORT in .c file instead of using a .dls
DLM_NO_DEF        = 1
DLM_NOENTRY        = 1
DLM_DEST        = $(tfmdlapps)
DLM_SPECIAL_LINKOPT     = -Fixed:no
DLM_DLO_DEST            = $(o)
DLM_NO_SIGN             = 1

#----------------------------------------------------------------------
#   Use dlmlink.mki to compile the Dynamic 
#   Load Specification (.dls) file and link
#   the DLM.
#----------------------------------------------------------------------
%include dlmlink.mki


%include $(baseDir)$(sAppName)rsc.mki
